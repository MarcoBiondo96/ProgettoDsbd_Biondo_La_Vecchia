version: '3.1'

services:

    db:
        build: ./dump/mysql
        container_name: db
        stdin_open: true
        tty: true
        container_name: mysql
        
        ports:
            - 3306:3306
        environment:
            - MYSQL_ROOT_PASSWORD=root
        volumes:
            - ./dump/mysql:/docker-entrypoint-initdb.d
            
        
          
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
    kafka:
    
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - 29092:29092
        
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        command: sh -c "((sleep 17 && kafka-topics --create --bootstrap-server localhost:29092 --if-not-exists --replication-factor 1 --partitions 1 --topic promethuesdata)&) && /etc/confluent/docker/run "
        
    etl_data_pipeline:
        build: ./dump/etl
        depends_on:
            - kafka
            - db
        environment:
      
            - KAFKA_SERVER=kafka
            - DB_SERVER=db
            
    data_retrival:
        build: ./dump/data_retrival
        ports:
            - "5000:5000"
            
        depends_on:
            - db
        environment:
      
            - DB_SERVER=db
    
    data_storage:
        build: ./dump/data_storage
        depends_on:
            - kafka
            - db
        environment:
            - KAFKA_SERVER=kafka
            - DB_SERVER=db       

    sla_manager:
        build: ./dump/sla_manager
        ports:
            - "5001:5001"
            
        depends_on:
            - db
        environment:
      
            - DB_SERVER=db